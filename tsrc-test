#!/bin/bash

function delete_fork() {
  REPO=$1
  docker-compose run  gihtubmakertools -d -r $REPO
}

function fork_repo() {
  REPO=$1
  docker-compose run  fork-repo node fork-repo.js "turbo-src/$REPO"
}

function create_pull_request() {
  echo ""
  echo "Creating pull requests..."
  echo "" && sleep 1
  USERNAME=$1
  REPO=$2

  if ! docker-compose run create_pull_requests python create_pull_requests.py "$USERNAME" "$REPO" "master" "pullRequest1" "refactor(lsp): remove redundant client cleanup" "auto pull request"; then
    echo "Error: pullRequest1 failed."
    exit 1
  fi

  if ! docker-compose run create_pull_requests python create_pull_requests.py "$USERNAME" "$REPO" "master" "pullRequest2" "refactor(uncrustify): set maximum number of consecutive newlines" "auto pull request"; then
    echo "Error: pullRequest2 failed."
    exit 1
  fi

  if ! docker-compose run create_pull_requests python create_pull_requests.py "$USERNAME" "$REPO" "master" "pullRequest3" "ci(mingw): only enable -municode for MinGW" "auto pull request"; then
    echo "Error: pullRequest3 failed."
    exit 1
  fi

  if ! docker-compose run create_pull_requests python create_pull_requests.py "$USERNAME" "$REPO" "master" "pullRequest4" "docs: add missing termdebug docs from Vim runtime updates" "auto pull request"; then
    echo "Error: pullRequest4 failed."
    exit 1
  fi

  if ! docker-compose run create_pull_requests python create_pull_requests.py "$USERNAME" "$REPO" "master" "pullRequest5" "refactor: missing parenthesis may cause unexpected problems" "auto pull request"; then
    echo "Error: pullRequest5 failed."
    exit 1
  fi

  if ! docker-compose run create_pull_requests python create_pull_requests.py "$USERNAME" "$REPO" "master" "pullRequest6" "refactor(normal): convert function comments to doxygen format" "auto pull request"; then
    echo "Error: pullRequest6 failed."
    exit 1
  fi
}

function run_tests() {
  # If we want to run from another director you can do for example
  # npm test --prefix turbosrc-service/ testing/integration/privaterepo/createUser.js

  echo ""
  echo "Running tests..."
  echo "" && sleep 1
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/createUser.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/createRepo.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/transferTokens.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/twoVoters.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/singleMajorityVoter.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/duplicateVote.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/manyVoters.js && sleep 5
  docker-compose exec -T turbosrc-service npm test testing/integration/privaterepo/semiAutoManyVoters.js && sleep 5
}

function execute_all_except_tests() {
  delete_fork $REPO
  fork_repo $REPO
  create_pull_request $USERNAME $REPO
}

if [ $# -lt 2 ]; then
  echo "Usage: $0 <username> <repository> [delete_fork|fork_repo|create_pull_request|run_tests|execute_all|execute_all_except_tests]"
  exit 1
fi

USERNAME=$1
REPO=$2

case "$3" in
  "delete_fork")
    delete_fork $REPO
    ;;
  "fork_repo")
    fork_repo $REPO
    ;;
  "create_pull_request")
    create_pull_request $USERNAME $REPO
    ;;
  "run_tests")
    run_tests
    ;;
  "execute_all")
    delete_fork $REPO
    fork_repo $REPO
    create_pull_request $USERNAME $REPO
    run_tests
    ;;
  "execute_all_except_tests")
    execute_all_except_tests
    ;;
  *)
    echo "Usage: $0 <username> <repository> [delete_fork|fork_repo|create_pull_request|run_tests|execute_all|execute_all_except_tests]"
    exit 1
    ;;
esac
