#!/bin/bash

usage() {
  echo "Usage: $0 [init|start|stop|restart|test [USERNAME REPO ACTION]]"
  echo "  init: initialize necessary files and directories"
  echo "  test: $0 <username> <repository> [delete_fork|fork_repo|create_pull_request|run_tests|execute_all|execute_all_except_tests]"
  exit 1
}

stop_services() {
  echo "Stopping all services..."
  sleep 1
  docker-compose -f ./docker-compose.yml down
  # Deactivating environment
  conda deactivate
}

start_services() {
  echo "Starting services..."
  # Activating environment
  conda activate tsrc-dev
  docker-compose -f ./docker-compose.yml up --build -d
}

run_tests() {
  if [[ $# -ne 3 ]]; then
    echo "Usage: $0 <username> <repository> [delete_fork|fork_repo|create_pull_request|run_tests|execute_all|execute_all_except_tests]"
    exit 1
  fi

  USERNAME=$1
  REPO=$2
  ACTION=$3

  # Activating environment
  conda activate tsrc-dev
  ./tsrc-test $USERNAME $REPO $ACTION
}

initialize_files() {
    # Checking if environment exists
    if conda env list | grep -q 'tsrc-dev'; then
        echo "Environment tsrc-dev already exists."
    else
        echo "Creating environment tsrc-dev..."
        conda create -n tsrc-dev python=3
    fi

    # Activating environment and installing dependencies
    echo "Activating environment and installing dependencies..."
    conda activate tsrc-dev
    pip install -r requirements.txt

    # Running python3 tsrc-dev.py init
    echo "Running tsrc-dev.py init..."
    python3 tsrc-dev.py init
}

if [[ $# -lt 1 ]]; then
  usage
fi

if [[ "$1" == "init" ]]; then
  initialize_files
elif [[ "$1" == "stop" ]]; then
  stop_services
elif [[ "$1" == "start" ]]; then
  start_services
elif [[ "$1" == "restart" ]]; then
  stop_services
  start_services
elif [[ "$1" == "test" ]]; then
  shift
  run_tests "$@"
else
  usage
fi
